version: "3.0"

services:
    django:
        build: ./django
        networks:
          - webapp
          - database
          - blockchainnet
        container_name: DJANGO
        command: python manage.py runserver 0.0.0.0:8000
        ports:
            - "8000:8000"
        volumes:
            - ./django/:/usr/src/app/
        environment:
            DJANGO_SETTINGS_MODULE: settings.settings
        env_file:
            - ./django/.env
        depends_on:
            - postgres
    
    nginx:
        image: nginx:1.25
        container_name: NGINX
        ports:
            - "443:443"
            - "80:80"
        volumes:
            - ./conf:/etc/ssl/
            - ./conf/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - django
        
    postgres:
        image: postgres:16
        container_name: POSTGRES
        networks:
          - database
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: "transcendence"
            POSTGRES_USER: "transcendence"
            POSTGRES_PASSWORD: "transcendence"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U transcendence -d transcendence"]
            interval: 10s
            timeout: 5s
            retries: 5
    node:
        container_name: BLOCKCHAIN
        build: ./blockchain
        networks:
          - webapp
          - blockchainnet
        command: >
          bash -c "npx hardhat node & sleep 10 && npx hardhat run scripts/deploy.js --network localhost"
        ports:
          - "8545:8545"
    
    frontend:
        container_name: FRONTEND
        build: ./frontend
        networks:
          - webapp
        ports:
          - "8080:8080"
        depends_on:
          - django
          - node
        command: >
          bash -c "node server.js"
        restart: always
          
networks:
  webapp:
    driver: bridge
  database:
    driver: bridge
  blockchainnet:
    driver: bridge