version: "3.0"

services:
    django:
        build: ./django
        container_name: DJANGO
        command: python manage.py runserver 0.0.0.0:8000
        ports:
            - "8000:8000"
        volumes:
            - ./django/:/usr/src/app/
        environment:
            DJANGO_SETTINGS_MODULE: settings.settings
        # restart: always
    

    nginx:
      image: nginx:latest
      container_name: NGINX
      ports:
        - "443:443"
        - "80:80"
      volumes:
          - ./nginx/tools:/etc/nginx/ssl/
          - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
          - ./frontend:/frontend
      depends_on:
        - django


    # nginx:
        # build: ./nginx
        # container_name: NGINX
        # ports:
        #     - "443:443"
        #     - "80:80"
        # volumes:
        #     - ./nginx/tools:/etc/nginx/ssl/
        #     - ./nginx/conf/:/etc/nginx/http.d/
        #     - ./frontend:/frontend
        # depends_on:
        #     - django
        # restart: always
        
    # postgres:
    #     image: postgres:16
    #     container_name: POSTGRES
    #     networks:
    #       - database
    #     ports:
    #         - "5432:5432"
    #     environment:
    #         POSTGRES_DB: "transcendence"
    #         POSTGRES_USER: "transcendence"
    #         POSTGRES_PASSWORD: "transcendence"
    #     healthcheck:
    #         test: ["CMD-SHELL", "pg_isready -U transcendence -d transcendence"]
    #         interval: 10s
    #         timeout: 5s
    #         retries: 5
    #     restart: always

    # node:
    #     container_name: BLOCKCHAIN
    #     build: ./blockchain
    #     networks:
    #       - webapp
    #       - blockchainnet
    #     command: >
    #       bash -c "npx hardhat node & sleep 10 && npx hardhat run scripts/deploy.js --network localhost"
    #     ports:
    #       - "8545:8545"
    #     restart: always
    
    # frontend:
    #     container_name: FRONTEND
    #     build: ./frontend
    #     networks:
    #       - webapp
    #     ports:
    #       - "8080:8080"
    #     depends_on:
    #       - django
    #       - node
    #       - nginx
    #       - postgres
    #     command: >
    #       bash -c "node server.js"
    #     restart: always
          
# networks:
  # webapp:
    # driver: bridge
  # database:
    # driver: bridge
  # blockchainnet:
    # driver: bridge
